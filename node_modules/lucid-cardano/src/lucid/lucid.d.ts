import Core from 'core/types';
import { Address, ExternalWallet, Network, PrivateKey, Provider, Slot, TxHash, Unit, UTxO, Wallet, WalletProvider } from '../types';
export declare class Lucid {
    static txBuilderConfig: Core.TransactionBuilderConfig;
    static wallet: Wallet;
    static provider: Provider;
    static network: Network;
    static initialize(network: Network, provider: Provider): Promise<void>;
    static currentSlot(): Promise<Slot>;
    static utxosAt(address: Address): Promise<UTxO[]>;
    static utxosAtWithUnit(address: Address, unit: Unit): Promise<UTxO[]>;
    static awaitTx(txHash: TxHash): Promise<boolean>;
    static selectWalletFromPrivateKey(privateKey: PrivateKey): Promise<void>;
    static selectWallet(walletProvider: WalletProvider): Promise<void>;
    static selectWalletFromUtxos({ address, utxos: rawUtxos, collateral, rewardAddress, }: ExternalWallet): Promise<void>;
}
